<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEACACoCAAAJgAAACAgAAABACAAqBAAAM4IAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////ygAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAELBAAAxAAAAQYBQARLAsACCYJAAEuEwACGQMAAAwAAAAdAwAAGgMAIk8+AAMV
        BABQcUQAKjcdAFOBVgADMA8ACRwHAAAiBwAXTyYAQXJGAD5zSABIh08AP3VGADd2TgAKKhEAKWAzAB9t
        OAAKQSAANVYxABQoHAARODAAPnFLAA8wFQAAGQUAAgAAAC5tWQABGw4ADSkWABsqDwALJQ0AACkKAAEs
        CwBDYC8ANWoxAAEXAAAZLBEARlMnACEkFAAYIw8ANT4dAA4RDwBsaVQAARwCABNbMAAAHgEAM3FDADF8
        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
</value>
  </data>
</root>